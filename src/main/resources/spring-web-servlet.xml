<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="cn.injava.forex" />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
 
	<mvc:annotation-driven />

	<!-- 引入常量配置文件，程序中注入 -->
	<bean id="sysConfigProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:sys-config.properties</value>
			</list>
		</property>
	</bean>
	<!-- // 引入常量配置文件 -->

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:sys-config.properties</value>
			</list>
		</property>
	</bean>

	<!--发送邮件-->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.163.com" />
		<property name="port" value="25" />
		<property name="username" value="${email.username}" />
		<property name="password" value="${email.password}" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	<!--  // 发送邮件-->

	<!--线程池-->
	<bean id="myThreadPool" class="cn.injava.forex.core.concurrent.ThreadPool"/>
	<!-- // 线程池-->

	<!--定时器-->
	<!--获取当前applicationContext-->
	<bean id="applicationContextProvder" class="cn.injava.forex.core.common.ApplicationContextProvider"/>

	<!--订阅报价-->
	<bean id="subPriceTask" class="cn.injava.forex.core.schedul.SubPriceTask" scope="prototype"/>

	<!--订阅技术分析-->
	<bean id="subTechnicalTask" class="cn.injava.forex.core.schedul.SubTechnicalTask" scope="prototype"/>

	<bean name="runMeJob" class="org.springframework.scheduling.quartz.JobDetailBean">

		<property name="jobClass" value="cn.injava.forex.core.schedul.RunMeJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="threadPool" value-ref="myThreadPool" />
			</map>
		</property>

	</bean>

	<!--停止定时任务中的所有线程-->
	<bean name="stopMeJob" class="org.springframework.scheduling.quartz.JobDetailBean">

		<property name="jobClass" value="cn.injava.forex.core.schedul.StopMeJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="threadPool" value-ref="myThreadPool" />
			</map>
		</property>

	</bean>

	<bean id="cronTriggerRunMeJob"
		  class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="runMeJob" />
		<property name="cronExpression" value="${RunMeJob.cronExpression}" />
	</bean>

	<bean id="cronTriggerStopMeJob"
		  class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="stopMeJob" />
		<property name="cronExpression" value="${StopMeJob.cronExpression}" />
	</bean>

	<!-- 项目启动10秒后执行 -->
	<bean id="simpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="runMeJob" />
		<!--  5 seconds-->
		<property name="startDelay" value="5000" />
		<property name="repeatCount" value="0"/>
		<property name="repeatInterval" value="10"/>
	</bean>


	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerRunMeJob" />
				<ref bean="cronTriggerStopMeJob" />
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
	<!-- // 定时器-->

	<!--dbcp 连接池-->
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="org.sqlite.JDBC" />
		<property name="url" value="jdbc:sqlite:database.db" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="1" />
		<property name="maxIdle" value="1" />
		<property name="poolPreparedStatements" value="true" />
	</bean>
	<!-- // dbcp 连接池-->

</beans>